{"version":3,"sources":["webpack:///./src/pages/posts.js"],"names":["Posts","render","siteTitle","get","this","siteDescription","posts","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","location","props","title","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","htmlAttributes","lang","meta","name","content","className","gatsby_image__WEBPACK_IMPORTED_MODULE_11___default","alt","sizes","data","logoImage","map","_ref","node","image","require","frontmatter","_components_PostSnippet__WEBPACK_IMPORTED_MODULE_10__","key","fields","slug","date","person","text","excerpt","_components_RightNav__WEBPACK_IMPORTED_MODULE_9__","React","Component","pageQuery"],"mappings":"6RAaMA,4FACJC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAkBF,IACtBC,KACA,4CAEIE,EAAQH,IAAIC,KAAM,sCAExB,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUP,KAAKQ,MAAMD,SAAUE,MAAOX,GAC5CK,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASd,IACvCQ,MAAOX,IAEXK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACbb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACGK,MAAM,cACNS,IAAI,cACJC,MAAOnB,KAAKQ,MAAMY,KAAKC,UAAUF,SAGtChB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,SACbb,EAAAC,EAAAC,cAAA,mBACCH,EAAMoB,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNC,EAAQC,OAAQ,KAAmBF,EAAKG,YAAYF,OAC1D,OACEtB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAaC,IAAKL,EAAKM,OAAOC,KAC5BN,MAAOA,EACPlB,SAAUiB,EAAKG,YAAYpB,SAC3ByB,KAAMR,EAAKG,YAAYK,KACvBC,OAAQT,EAAKG,YAAYM,OACzBF,KAAMP,EAAKM,OAAOC,KAClBG,KAAMV,EAAKW,aAInBhC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,UAKRjC,EAAAC,EAAAC,cAAA,iBA/CcgC,IAAMC,WAuDX1C,YAER,IAAM2C,EAAS","file":"component---src-pages-posts-js-008696603be6285fc96a.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styled from 'react-emotion'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport RightNav from '../components/RightNav'\nimport PostSnippet from '../components/PostSnippet'\n\nimport Img from \"gatsby-image\";\n\nclass Posts extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n      <main>\n        <div className=\"container\">\n          <div className=\"header\">\n            <Img\n               title=\"Gossip Girl\"\n               alt=\"Gossip Girl\"\n               sizes={this.props.data.logoImage.sizes}\n             />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <h1>Posts</h1>\n              {posts.map(({ node }) => {\n                const image = require('../assets/img/' + node.frontmatter.image);\n                return (\n                  <PostSnippet key={node.fields.slug}\n                    image={image}\n                    location={node.frontmatter.location}\n                    date={node.frontmatter.date}\n                    person={node.frontmatter.person}\n                    slug={node.fields.slug}\n                    text={node.excerpt}/>\n                )\n              })}\n            </div>\n            <div className=\"col\">\n              <RightNav />\n            </div>\n          </div>\n        </div>\n      </main>\n      <div>\n\n      </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Posts\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    logoImage: imageSharp(original: {src: { regex: \"/logo/\" }} ) {\n      sizes(maxWidth: 1240 ) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image\n            person\n            location\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}